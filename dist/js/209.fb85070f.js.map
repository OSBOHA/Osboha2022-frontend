{"version":3,"file":"js/209.fb85070f.js","mappings":"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","sources":["webpack://Osboha180/./src/API/services/group.service.js","webpack://Osboha180/./src/views/OsbohaMain/Group/GroupsList.vue","webpack://Osboha180/./src/views/OsbohaMain/Group/GroupsList.vue?001d"],"sourcesContent":["import { api } from '../Intercepter'\nclass GroupService {\n    async createGroup(groupForm) {\n        try {\n            const response = await api.post(`/group/create`, groupForm, {\n                headers: { \"Content-type\": \"multipart/form-data\" },\n            });\n            return response.data.data\n        } catch (error) {\n            return error;\n        }\n    }\n    async getAll() {\n        try {\n            const groups = await api.get('/group');\n            return await groups.data;\n        } catch (error) {\n            return error\n        }\n    }\n\n    async getById(group_id) {\n        try {\n            const group = await api.get(`group/show/${group_id}`);\n            return group.data.data;\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async getBooks(group_id) {\n        try {\n            const books = await api.get(`group/books/${group_id}`);\n            return books.data.data;\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async getAllGroupExceptions(group_id) {\n        try {\n            const groupExceptions = await api.get(`group/group-exceptions/${group_id}`);\n            return groupExceptions.data.data;\n        } catch (error) {\n            return error\n        }\n    }\n    async exceptionsFilter(filter, group_id) {\n        try {\n            const exceptions = await api.get(`group/exceptions-filter/${filter}/${group_id}`);\n            return exceptions.data.data;\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async BasicMarksView(group_id) {\n        try {\n            const BasicMarksView = await api.get(`group/basic-mark-view/${group_id}`);\n            return BasicMarksView.data.data;\n        } catch (error) {\n            return error\n        }\n    }\n    async AllAchievements(group_id, week_filter) {\n        try {\n            const response = await api.get(`group/all-achievements/${group_id}/${week_filter}`);\n            return response.data.data;\n        } catch (error) {\n            return error\n        }\n    }\n    async AchievementAsPages(group_id, week_filter) {\n        try {\n            const response = await api.get(`group/achievement-as-pages/${group_id}/${week_filter}`);\n            return response.data.data;\n        } catch (error) {\n            return error\n        }\n    }\n    async searchForAmbassadorAchievement(ambassador_name, group_id, week_filter) {\n        try {\n            const response = await api.get(`group/search-for-ambassador-achievement/${ambassador_name}/${group_id}/${week_filter}`);\n            return response.data.data;\n        } catch (error) {\n            return error\n        }\n    }\n    async searchForAmbassador(ambassador_name, group_id) {\n        try {\n            const response = await api.get(`group/search-for-ambassador/${ambassador_name}/${group_id}`);\n            return response.data.data;\n        } catch (error) {\n            return error\n        }\n    }\n\n    async createLeaderRequest(request) {\n        try {\n            const response = await api.post(`/group/create-leader-request`, request, {\n                headers: { \"Content-type\": \"multipart/form-data\" },\n            });\n            return response.data.data\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async lastLeaderRequest(group_id) {\n        try {\n            const response = await api.get(`group/last-leader-request/${group_id}`);\n            return response.data.data;\n        } catch (error) {\n            return error\n        }\n    }\n\n\n    async deleteById(group_id) {\n        try {\n            return await api.delete(`/group/delete/${group_id}`);\n        } catch (error) {\n            return error;\n        }\n    }\n\n    async update(id) {\n        // try{\n        //     return await api.post(`/group/update`, id);\n        // }catch(error){\n        //     return error;\n        // }\n    }\n\n    async getGroupByType(typeId) {\n        try {\n            const groups = await api.post('/group/GroupByType', { type_id: typeId });\n            return groups.data\n        } catch (error) {\n            return error\n        }\n    }\n    async userGroups() {\n        try {\n            const groups = await api.get('/group/user-groups');\n            return groups.data.data\n        } catch (error) {\n            return error\n        }\n    }\n\n    /*\n    **** Need to discuss ****\n    async addMember(body) {\n        try {\n            const groups = await api.post('/user-group/', body);\n            return groups.data\n        } catch (error) {\n            return error.response.data.data\n        }\n    }\n    */\n    /**\n     * get group week statistics\n     * \n     * @param  $group_id\n     * @return statistics;\n     */\n\n    async statistics(group_id) {\n        try {\n            const response = await api.get(`group/statistics/${group_id}`);\n            return response.data.data\n        } catch (error) {\n            return error\n        }\n    }\n    /**\n     * get screenshots and screens by week\n     * \n     * @param  $group_id,$filter\n     * @return number of theses and screenshots;\n     */\n    async thesesAndScreensByWeek(group_id, filter) {\n        try {\n            const response = await api.get(\n                `group/theses-and-screens-by-week/${group_id}/${filter}`\n            );\n            return response.data.data;\n        } catch (error) {\n            return error;\n        }\n    }\n    /**\n     * get avg in a month\n     * \n     * @param  $group_id,$filter\n     * @return month achievement;\n     */\n    async monthAchievement(group_id, filter) {\n        try {\n            const response = await api.get(\n                `group/month-achievement/${group_id}/${filter}`\n            );\n            return response.data.data;\n        } catch (error) {\n            return error;\n        }\n    }\n}\n\nexport default new GroupService()","<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-sm-12\" v-if=\"groups && groups.length > 0\">\n        <iq-card>\n          <template v-slot:headerTitle>\n            <h4 class=\"card-title\">قائمة المجموعات - {{ groups.length }}</h4>\n          </template>\n\n          <template v-slot:body>\n            <router-link\n              class=\"btn btn-primary float-end\"\n              :to=\"{\n                name: 'group.addGroup',\n              }\"\n            >\n              اضافة مجموعة\n            </router-link>\n            <div class=\"table-responsive\">\n              <table id=\"datatable\" class=\"table table-striped table-bordered\">\n                <thead>\n                  <tr>\n                    <th>اسم المجموعة</th>\n                    <th>نوع المجموعة</th>\n                    <th>عدد الاعضاء</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(group, index) in groups\" :key=\"index\">\n                    <td>\n                      <router-link\n                        class=\"text-center\"\n                        :to=\"{\n                          name: 'group.group-detail',\n                          params: { group_id: group.id },\n                        }\"\n                      >\n                        {{ group.name }}\n                      </router-link>\n                    </td>\n                    <td>\n                      {{ group_type[group.type.type] }}\n                    </td>\n                    <td>\n                      {{ group.users_count }}\n                    </td>\n\n                    <td>\n                      <!-- <span class=\"btn btn-primary text-white material-symbols-outlined ms-1 me-1\">\n                        edit\n                      </span> -->\n                      <span\n                        @click=\"deleteGroup(group.id)\"\n                        class=\"btn btn-danger text-white material-symbols-outlined ms-1 me-1\"\n                      >\n                        delete\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </template>\n        </iq-card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport GroupService from \"@/API/services/group.service\";\nimport helper from \"@/utilities/helper\";\n\nexport default {\n  name: \"Groups List\",\n  async created() {\n    const groups = await GroupService.getAll();\n    this.groups = groups.data;\n  },\n\n  data() {\n    return {\n      groups: [],\n      group_type: {\n        followup: \"فريق متابعة\",\n        supervising: \"فريق رقابة\",\n        advising: \"فريق توجيه\",\n        consultation: \"فريق الاستشارة\",\n        Administration: \"الإدارة العليا\",\n      },\n    };\n  },\n\n  methods: {\n    async deleteGroup(id) {\n      try {\n        const response = await GroupService.deleteById(id);\n        const groups = await GroupService.getAll();\n        this.groups = groups.data;\n        helper.toggleToast(\"تم الحذف\", \"success\");\n\n        console.log(response);\n      } catch (error) {\n        helper.toggleToast(\"حصل خطأ - لم يتم الحذف!\", \"danger\");\n        console.log(error);\n      }\n    },\n  },\n};\n</script>\n","import { render } from \"./GroupsList.vue?vue&type=template&id=59b5798e\"\nimport script from \"./GroupsList.vue?vue&type=script&lang=js\"\nexport * from \"./GroupsList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\someO\\\\Desktop\\\\vue\\\\osboha2022\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["GroupService","groupForm","response","api","headers","data","error","groups","group_id","group","books","groupExceptions","filter","exceptions","BasicMarksView","week_filter","ambassador_name","request","id","typeId","type_id","class","_createElementVNode","_createElementBlock","$data","length","_createVNode","_component_iq_card","headerTitle","_toDisplayString","body","_component_router_link","to","_hoisted_6","_Fragment","_renderList","index","key","name","type","users_count","onClick","$options","_hoisted_7","async","this","group_type","followup","supervising","advising","consultation","Administration","methods","helper","console","log","__exports__","render"],"sourceRoot":""}